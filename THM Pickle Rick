This CTF requires you to capture three flags by exploiting a web server to help turn Rick back into a human. Created by TryHackMe and ar33zy.

Completed using openvpn connected through a kali vm

  Installation instructions for openvpn can be found at https://tryhackme.com/r/access

# Flag 1

After booting the target and host vms,

I ran an nmap scan using the -sV tag on the target IP and accessed the page via firefox while it ran. 

  Not much on the surface except for an outline of the task.

I accessed the source code and found my first clue 

  <!--

    Note to self, remember username!

    Username: R1ckRul3s

  -->

The username is helpful but without a login field I can't do anything with it.

The scan has finished by now and we can see that ports 22 and 80 are open.

  Why not try to ssh in using the username we found?

    Well it won't let us but it was worth a shot.

I tried some standard directory traversal and was able to access assets folder

  Having recently completed a few steganography activities, I thought to download the images here and run them through steghide just in case.

    No yield.

Knowing that robots.txt is a common find in CTF's I tried to access it and voila! It displays one line of text

  Wubbalubbadubdub

Seems weird so I keep it on hand for later use

Rather than continue poking around blind, I run another nmap scan this time with an enumeration script

  nmap -sV --script=http-enum <TARGETIP>

The output is exactly what I was looking for

  80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
  |_http-server-header: Apache/2.4.41 (Ubuntu)
  | http-enum: 
  |   /login.php: Possible admin folder
  |_  /robots.txt: Robots file

Return to the webpage on the browser adding /login.php after the IP address and I get a login page!

I have an explicitly stated username and an anomalous string that could be a password so I try them out and gain access

Access is still restricted inside the webpage. All I have access to is a single command line that reverts to the same directory after each entry

  ls -la

  total 40
  drwxr-xr-x 3 root   root   4096 Feb 10  2019 .
  drwxr-xr-x 3 root   root   4096 Feb 10  2019 ..
  -rwxr-xr-x 1 ubuntu ubuntu   17 Feb 10  2019 Sup3rS3cretPickl3Ingred.txt
  drwxrwxr-x 2 ubuntu ubuntu 4096 Feb 10  2019 assets
  -rwxr-xr-x 1 ubuntu ubuntu   54 Feb 10  2019 clue.txt
  -rwxr-xr-x 1 ubuntu ubuntu 1105 Feb 10  2019 denied.php
  -rwxrwxrwx 1 ubuntu ubuntu 1062 Feb 10  2019 index.html
  -rwxr-xr-x 1 ubuntu ubuntu 1438 Feb 10  2019 login.php
  -rwxr-xr-x 1 ubuntu ubuntu 2044 Feb 10  2019 portal.php
  -rwxr-xr-x 1 ubuntu ubuntu   17 Feb 10  2019 robots.txt

We almost have our first flag.

First I try

  cat Sup3rS3cretPickl3Ingred.txt

And a message pops up that the command is disabled. So are 'head', 'tail' and 'more' BUT when I input

  less Sup3rS3cretPickl3Ingred.txt

I get the first flag!

  Can also be found by accessing <TARGETIP>/Sup3rS3cretPickl3Ingred.txt

# Flag 2

Onto the next! Let's start by checking our handily labelled clue

  less clue.txt

    Look around the file system for the other ingredient.

That was the plan so let's get to it. First I check where I am so I can be confident about where I'm going

  pwd

    /var/www/html

Using increasing ../ increments of

  cd ../ && ls -la 

I get a clearer picture of the file heirarchy and find a folder named rick saved under home

  less /home/rick/second\ ingredients

And I have my second flag!

# Flag 3

I spent a lot of time chasing geese on this step before I realised that I had sudo privilege

Lesson being, run

  sudo -l 

When you get into a system so you know whether privilege escalation is necessary or not

  User www-data may run the following commands on ip-<TARGETIP>:
    (ALL) NOPASSWD: ALL

Time to check out the root folder!

  sudo ls -la /root

    total 36
    drwx------  4 root root 4096 Jul 11 10:17 .
    drwxr-xr-x 23 root root 4096 Nov 21 03:24 ..
    -rw-------  1 root root  168 Jul 11 11:18 .bash_history
    -rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc
    -rw-r--r--  1 root root  161 Jan  2  2024 .profile
    drwx------  2 root root 4096 Feb 10  2019 .ssh
    -rw-------  1 root root  702 Jul 11 10:17 .viminfo
    -rw-r--r--  1 root root   29 Feb 10  2019 3rd.txt
    drwxr-xr-x  4 root root 4096 Jul 11 10:53 snap

Looks like we're almost there

  sudo less /root/3rd.txt

And all three flags are found!

Thanks to Try Hack Me and ar33zy for this fun exercise in web server exploitation!

